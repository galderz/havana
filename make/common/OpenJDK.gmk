include $(TOPDIR)/make/common/Capstone.gmk

CONF ?= fast

ant_home = $(opt)/ant
ant_bin = $(opt)/ant/bin/ant
call_java += $(java)
gtest_opt = $(opt)/googletest
java = $(java_build_dir)/jdk/bin/java
java_build_dir = $(JDK_HOME)/build/$(conf_name)
jmh = $(JDK_HOME)/build/jmh/jars/.jmh
# todo use JTreg.gmk instead?
jtreg_bin = $(jtreg_home)/bin/jtreg
jtreg_opt = $(opt)/jtreg
jtreg_home = $(jtreg_opt)/build/images/jtreg
lldbinit = $(TOPDIR)/make/common/.lldbinit
os = $(shell uname | tr A-Z a-z)

CPU ?=
ifdef CPU
  cpu = $(CPU)
else
  cpu = $(shell uname -m | tr A-Z a-z)
endif
conf_name = $(CONF)-$(os)-$(cpu)

ifeq ($(ARCH),686)
  conf_args += --with-target-bits=32
endif

ifeq ($(CONF),slow)
  conf_args += --with-debug-level=slowdebug
else ifeq ($(CONF),fast)
  conf_args += --with-debug-level=fastdebug
endif

java: $(java)

$(java): $(shell find $(JDK_HOME)/src -type f -name '*.java')
$(java): $(shell find $(JDK_HOME)/src -type f -name '*pp')
$(java): $(shell find $(JDK_HOME)/test -type f -name '*.java')
$(java): $(shell find $(JDK_HOME)/test -type f -name '*pp')
$(java): $(shell find $(JDK_HOME)/src -type f -name '*.ad')
$(java):
> pushd $(JDK_HOME)
> CONF=$(conf_name) make
> cp $(usr_home)/lib/libcapstone* $(JDK_HOME)/build/$(conf_name)/jdk/lib
> popd
> cp $(lldbinit) $(JDK_HOME)/build/$(conf_name)
> touch $@

clean-jdk:
> pushd $(JDK_HOME)
> CONF=$(conf_name) make clean
.PHONY: clean-jdk

configure: $(jmh) $(capstone_lib) $(jtreg_bin) $(gtest_opt)
> pushd $(JDK_HOME)
> bash configure \
>   --enable-hsdis-bundling \
>   --disable-precompiled-headers \
>   --with-boot-jdk=$(BOOT_JDK_HOME) \
>   --with-capstone=$(usr_home) \
>   --with-conf-name=$(conf_name) \
>   --with-hsdis=capstone \
>   --with-gtest=$(gtest_opt) \
>   --with-jmh=build/jmh/jars \
>   --with-jtreg=$(jtreg_home) \
>   $(conf_args)
> popd
> cp $(capstone_dylib) . || true
.PHONY: configure

compile-commands:
> cd $(JDK_HOME)
> CONF=$(conf_name) make compile-commands
.PHONY: compile-commands

clear-logs:
> rm -f *.log
.PHONY: clear-logs

idea: $(ant_bin)
> cd $(JDK_HOME)
> ANT_HOME=$(HOME)/opt/ant CONF=$(conf_name) sh bin/idea.sh
.PHONY: idea

$(ant_bin):
> cd $(opt)
> wget https://dlcdn.apache.org//ant/binaries/apache-ant-1.10.14-bin.tar.gz
> tar -xzvpf apache-ant-1.10.14-bin.tar.gz
> ln -s apache-ant-1.10.14 ant

$(jmh):
> cd $(JDK_HOME)
> sh make/devkit/createJMHBundle.sh
> touch $@

$(gtest_opt):
> cd $(opt)
> git clone -b v1.14.0 https://github.com/google/googletest

$(jtreg_bin): $(jtreg_opt)
> cd $<
> sh make/build.sh --jdk $(BOOT_JDK_HOME)

$(jtreg_opt):
> cd $(opt)
> git clone https://github.com/openjdk/jtreg

test: $(java)
> cd $(JDK_HOME)
> mkdir -p $(java_build_dir)/images/test
> cp $(capstone_dylib) $(java_build_dir)/images/test || true
> CONF=$(conf_name) make test TEST="$(TEST)"
.PHONY: test

micro: $(java)
> cd $(JDK_HOME)
> mkdir -p $(java_build_dir)/images/test
> cp $(capstone_dylib) $(java_build_dir)/images/test || true
> CONF=$(conf_name) make test TEST="$(TEST)" MICRO="$(MICRO)"
.PHONY: micro

micro-c1: $(java)
> cd $(JDK_HOME)
> CONF=$(conf_name) make test TEST="$(TEST)" MICRO="JAVA_OPTIONS=-XX:TieredStopAtLevel=1"
.PHONY: micro-c1

test-all: $(java)
> cd $(JDK_HOME)
> CONF=$(conf_name) make test TEST="hotspot_compiler hotspot_gc hotspot_serviceability hotspot_runtime tier1 tier2 tier3"
.PHONY: test-all

test-tier1: $(java)
> cd $(JDK_HOME)
> CONF=$(conf_name) make test TEST="tier1"
.PHONY: test-tier1

test-hotspot-compiler: $(java)
> cd $(JDK_HOME)
> CONF=$(conf_name) make test TEST="hotspot_compiler"
.PHONY: test-hotspot-compiler

test-hotspot-compiler-c1: $(java)
> cd $(JDK_HOME)
> CONF=$(conf_name) make test TEST="hotspot_compiler" JTREG="JAVA_OPTIONS=-XX:TieredStopAtLevel=1"
.PHONY: test-hotspot-compiler-c1-only
