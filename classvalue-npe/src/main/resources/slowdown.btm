RULE trace main entry
CLASS ClassValueNPE
METHOD main
AT ENTRY
IF true
DO traceln("entering main")
ENDRULE

RULE trace main exit
CLASS ClassValueNPE
METHOD main
AT EXIT
IF true
DO traceln("exiting main")
ENDRULE

RULE trace method 1
CLASS java.lang.ClassValue
METHOD getCacheCarefully
AT ENTRY
IF true
DO traceln("[" + Thread.currentThread().getName() + "] entering getCacheCarefully(" + $1.toString() + ")")
ENDRULE

RULE delay constructor test 2
CLASS java.lang.ClassValue$ClassValueMap
METHOD sizeCache
AT ENTRY
IF Thread.currentThread().getName().equals("slow-thread")
DO traceln("[" + Thread.currentThread().getName() + "] entering and delaying sizeCache method");
   delay(200)
ENDRULE

# RULE delay constructor test 2
# CLASS java.lang.ClassValue$ClassValueMap
# METHOD <init>
# AT ENTRY
# IF Thread.currentThread().getName().equals("main")
# DO traceln("entering ClassValueMap constructor");
#    delay(6000)
# ENDRULE

# RULE delay constructor test 3
# CLASS java.lang.ClassValue
# METHOD getMap
# AT ENTRY
# IF true
# DO traceln("entering getMap for type " + $1.toString())
# ENDRULE

# RULE delay constructor test 4
# CLASS java.lang.ClassValue$ClassValueMap
# METHOD sizeCache
# AT ENTRY
# IF Thread.currentThread().getName().equals("main")
# DO traceln("entering sizeCache");
#    Thread.sleep(60000)
#    traceln("exit sizeCache");
# ENDRULE
